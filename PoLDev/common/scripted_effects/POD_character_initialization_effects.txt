POD_character_initialization_for_nobles_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes
	
# World of Mortals
	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# # Make Mortal	
		# random_list = {
			# 98 = { POD_character_initialization_for_mortal_commoners_effect = yes }
			# 1 = { POD_character_initialization_for_vampire_commoners_effect = yes }
			# 1 = { POD_character_initialization_for_supehunter_commoners_effect = yes }
			# #1 = { POD_character_initialization_for_shapeshifter_commoners_effect = yes }
			# #1 = { POD_character_initialization_for_mage_commoners_effect = yes }
		# }					
	# }

# World of Monsters

	if = {
		limit = {
			# has_game_rule = world_of_monsters					
			NOT = { has_character_flag = had_POD_character_initialization }
		}
	if = {
		limit = {
			exists = liege
			liege = { is_forsaken_or_gantenbein_trigger = yes }
		}
		POD_character_initialization_for_forsaken_barons_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			OR  = {
				liege = { has_trait = vampire }
				liege = { has_trait = risen }
			}
		}
		POD_character_initialization_for_vampire_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { has_trait = bloodgorged }
		}
		trigger_event = POD_ghoul_maintenance.300
	}
	else_if = {
		limit = {
			exists = liege
			liege = { 
				OR = {
					has_trait = kueijin 
					has_trait = dhampyr
				}
			}
		}
		POD_character_initialization_for_kueijin_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { has_trait = shapeshifter }
		}
		POD_character_initialization_for_shapeshifter_barons_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { has_trait = supehunter }
		}
		POD_character_initialization_for_supehunter_barons_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { has_trait = wraith }
		}
		POD_character_initialization_for_wraith_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { 
				OR = {
					has_trait = fae 
					has_trait = changeling 
				}
			}
		}
		POD_character_initialization_for_fae_nobles_effect = yes
	}
	else_if = { # delay to here for ghoul-ww
		limit = {
			exists = liege
			liege = { has_trait = ghoul }
		}
		POD_character_initialization_for_vampire_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { 
				has_trait = revenant 
				religion = { is_in_family = rf_kindred }
			}
		}
		trigger_event = POD_ghoul_maintenance.300
	}
	else_if = {
		limit = {
			exists = liege
			liege = { 
				has_trait = kinain 
				religion = { is_in_family = rf_fae }
			}
		}
		POD_character_initialization_for_fae_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = { 
				has_trait = kinfolk 
				OR = { 
					religion = { is_in_family = rf_gaia } 
					religion = { is_in_family = rf_wyrm } 
				}
			}
		}
		POD_character_initialization_for_shapeshifter_barons_effect = yes
	}
	
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = religion:calomenasforsaken_religion }
		}
		POD_character_initialization_for_forsaken_barons_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_kueijin } }
		}
		POD_character_initialization_for_kueijin_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_kindred } }
		}
		POD_character_initialization_for_vampire_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { 
				OR = {
					religion = { is_in_family = rf_gaia }
					religion = { is_in_family = rf_wyrm }
				}
			}
		}
		POD_character_initialization_for_shapeshifter_barons_effect = yes
	}	
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_hunters } }
		}
		POD_character_initialization_for_supehunter_barons_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_fae } }
		}
		POD_character_initialization_for_fae_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_wraiths } }
		}
		POD_character_initialization_for_wraith_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = liege
			liege = {
				POL_is_exalted_trigger = yes
			}
		}
		POL_character_initialization_for_exalted_nobles_effect = yes
	}
	else_if = {
		limit = {
			exists = capital_province
			capital_province = { religion = { is_in_family = rf_exalted } }
		}
		POL_character_initialization_for_exalted_nobles_effect = yes
	}
	
	else = {
		POD_character_initialization_for_random_nobles_effect = yes
	}
	
	if = {
		limit = { NOT = { has_character_flag = will_be_replaced } }
		if = {
			limit = { has_amenti_liege_trigger = yes }
			POD_character_initialization_for_neteru_barons_effect = yes
		}
		if = {
			limit = { has_demonic_liege_trigger = yes }
			POD_character_initialization_for_thrall_barons_effect = yes
		}
		
		trigger_event = POD_maintenance.2
	}
	}
}

POD_character_initialization_for_barons_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

# Check era

	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# random_list = {
			# 98 = { POD_character_initialization_for_mortal_commoners_effect = yes }
			# 1 = { POD_character_initialization_for_vampire_commoners_effect = yes }
			# 1 = { POD_character_initialization_for_supehunter_commoners_effect = yes }
			# #1 = { POD_character_initialization_for_shapeshifter_commoners_effect = yes }
			# #1 = { POD_character_initialization_for_mage_commoners_effect = yes }
		# }	
	# }
	
	if = {
		limit = {
			# has_game_rule = world_of_monsters
			NOT = { has_character_flag = had_POD_character_initialization }
		}	
	
		set_character_faith = liege.faith
	
		if = {
			limit = {
				liege = { has_trait = risen }
			}
			set_character_faith = faith:viaossium
		}
		
		if = {
			limit = {
				religion = religion:calomenasforsaken_religion
			}
			POD_character_initialization_for_forsaken_barons_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_kindred }
			}
			POD_character_initialization_for_vampire_barons_adult_only_effect = yes
		}

		else_if = {
			limit = {
				OR = {
					religion = { is_in_family = rf_gaia }
					religion = { is_in_family = rf_wyrm }
				}
			}
			POD_character_initialization_for_shapeshifter_barons_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_hunters }
			}
			POD_character_initialization_for_supehunter_barons_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_fae }
			}
			POD_character_initialization_for_fae_barons_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_wraiths }
			}
			POD_character_initialization_for_wraith_nobles_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_kueijin }
			}
			POD_character_initialization_for_kueijin_nobles_effect = yes
		}
		else_if = {
			limit = {
				religion = { is_in_family = rf_exalted }
			}
			POL_character_initialization_for_exalted_barons_effect = yes
		}
		
		else = {
			POD_character_initialization_for_random_barons_effect = yes
		}
		
		if = {
			limit = { has_amenti_liege_trigger = yes }
			POD_character_initialization_for_neteru_barons_effect = yes
		}
		if = {
			limit = { has_demonic_liege_trigger = yes }
			POD_character_initialization_for_thrall_barons_effect = yes
		}
		
		trigger_event = POD_maintenance.2
	}
}

POD_character_initialization_for_merc_commanders_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

# Check era
	
	if = {
		limit = {
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		if = {
			limit = {
				has_government = holy_order_government
			}
			if = {
				limit = {
					religion = religion:calomenasforsaken_religion
				}
				POD_character_initialization_for_forsaken_barons_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_kueijin }
				}
				POD_character_initialization_for_kueijin_nobles_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_kindred }
				}
				POD_character_initialization_for_vampire_barons_adult_only_effect = yes
			}
			else_if = {
				limit = {
					OR = {
						religion = { is_in_family = rf_gaia }
						religion = { is_in_family = rf_wyrm }
					}					
				}
				POD_character_initialization_for_shapeshifter_barons_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_hunters }
				}
				POD_character_initialization_for_supehunter_barons_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_wraiths }
				}
				POD_character_initialization_for_wraith_nobles_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_fae }
				}
				POD_character_initialization_for_fae_commoners_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_mummies }
				}
				POD_character_initialization_for_random_commoners_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_demons }
				}
				POD_character_initialization_for_thrall_commoners_effect = yes
			}
			else = {
				POD_character_initialization_for_mortal_commoners_effect = yes
			}
			else_if = {
				limit = {
					religion = { is_in_family = rf_exalted }
				}
				POL_character_initialization_for_exalted_barons_effect = yes
			}
		}
		else = {
			POD_character_initialization_for_mortal_commoners_effect = yes
		}
	}
}

POD_character_initialization_for_commoners_effect = {
if = {
	limit = { is_alive = yes }
	
	if = {
		limit = { NOT = { exists = location } }

		#Oops, no good! Go someplace.
		random_independent_ruler = {
			limit = {
				exists = capital_province
				capital_province = { local_pool_is_full_trigger = no }
			}
			alternative_limit = { exists = capital_province }
			capital_province = { save_scope_as = destination }
		}
		
		move_to_pool_at = scope:destination
	}

	if = {
		limit = {
			# has_game_rule = world_of_monsters
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		save_scope_as = POD_commoner
		
		random_list = {
			90 = { 
				trigger = { 
					NOT = { religion = religion:redtalon_religion }
				}
				POD_character_initialization_for_mortal_commoners_effect = yes 
			}
			10 = { 
				if = {
					limit = {
						exists = scope:POD_commoner.host
					} 
					set_character_faith = scope:POD_commoner.host.faith
				}
				if = {
					limit = {
						exists = scope:POD_commoner.liege
					} 
					set_character_faith = scope:POD_commoner.liege.faith
				}
				
				if = {
					limit = {
						religion = religion:calomenasforsaken_religion
					}
					POD_character_initialization_for_forsaken_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_kueijin }
					}
					POD_character_initialization_for_kueijin_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_kindred }
					}
					POD_character_initialization_for_vampire_commoners_adult_only_effect = yes
				}
				else_if = {
					limit = {
						OR = {
							religion = { is_in_family = rf_gaia }
							religion = { is_in_family = rf_wyrm }
						}					
					}
					POD_character_initialization_for_shapeshifter_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_hunters }
					}
					POD_character_initialization_for_supehunter_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_fae }
					}
					POD_character_initialization_for_fae_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_wraiths }
					}
					POD_character_initialization_for_wraith_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_mummies }
					}
					POD_character_initialization_for_neteru_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_demons }
					}
					POD_character_initialization_for_thrall_commoners_effect = yes
				}
				else_if = {
					limit = {
						religion = { is_in_family = rf_exalted }
					}
					POL_character_initialization_for_exalted_commoners_effect = yes
				}
				else = {
					POD_character_initialization_for_mortal_commoners_effect = yes
				}
			}
		}	
	}
	
	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# random_list = {
			# 98 = { POD_character_initialization_for_mortal_commoners_effect = yes }
			# 1 = {
				# POD_character_initialization_for_vampire_commoners_effect = yes
			# }
			# 1 = {
				# POD_character_initialization_for_supehunter_commoners_effect = yes
			# }
		# }	
	# }
}
}

POD_character_initialization_for_vampire_nobles_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes
	
	POD_character_create_vampirelord_effect = yes
	
	# Transfer the titles
	if = {
		limit = {
			is_landed = yes 
		}	
		create_title_and_vassal_change = {
			type = created
			save_scope_as = title_change
			add_claim_on_loss = no
		}

		every_held_title = {
			limit = { is_capital_barony = no }
			change_title_holder = {
				holder = scope:created_vampirelord
				change = scope:title_change
				take_baronies = no
			}
		}	
		resolve_title_and_vassal_change = scope:title_change	
		
		# Dispose of the vanilla title holder
		
		# death = { death_reason = death_disappearance } # Instant kill title holder give error as they can't hold variable anymore
		add_character_flag = will_be_replaced
		trigger_event = {
			id = POD_disappearance.1 
			days = 1
		}
	}
	
	scope:created_vampirelord = { 
		if = {
			limit = { has_amenti_liege_trigger = yes }
			POD_character_initialization_for_neteru_barons_effect = yes
		}
		if = {
			limit = { has_demonic_liege_trigger = yes }
			POD_character_initialization_for_thrall_barons_effect = yes
		}
		
		trigger_event = POD_maintenance.2
	}
}

POD_character_initialization_for_vampire_barons_adult_only_effect = {
	if = {
		limit = { 
			is_adult = yes 
		}
		POD_character_initialization_for_vampire_barons_effect = yes
	}
	else = {
		trigger_event = POD_ghoul_maintenance.300
	}
}

POD_character_initialization_for_vampire_barons_effect = {
	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# add_secret = {
			# type = secret_vampire
		# }
		# add_character_flag = {
			# flag = immune_to_disease
		# }		
		
		# POD_character_vampire_clan_initialization_effect = yes
		# POD_character_vampire_discipline_initialization_effect = yes
		# POD_character_initialization_random_background_effect = yes
	# }
	
	# if = {
		# limit = {
			# has_game_rule = world_of_monsters
		# }	
		add_trait = vampire
		
		# Assign Clan Based on Faith then Location

		if = {
			limit = {
				faith = faith:viahyron
			}
			add_trait = baali
		}
		else_if = {
			limit = {
				OR = {
					religion = religion:roadofset_religion
					faith = faith:pathofdaitya
					religion = religion:naktanchara_religion
				}
			}
			add_trait = setite
		}
		else_if = {
			limit = {
				religion = religion:roadofmetamorphosis_religion
			}
			add_trait = tzimisce
		}
		else_if = {
			limit = {
				religion = religion:roadofblood_religion
			}
			add_trait = assamite
		}
		else_if = {
			limit = {
				religion = religion:roadofmetamorphosis_religion
			}
			add_trait = tzimisce
		}
		else_if = {
			limit = {
				religion = religion:codeoftremere_religion
			}
			add_trait = tremere
		}
		else_if = {
			limit = {
				religion = religion:ordos_religion
			}
			add_trait = malkavian
		}
		else_if = {
			limit = {
				OR = {
					faith = faith:mayaparisatya
					faith = faith:viaparadox
					faith = faith:tariqeltanaqud
					faith = faith:samsara
				}
			}
			add_trait = ravnos
		}
		else_if = {
			limit = {
				faith = faith:codeofsamiel
			}
			add_trait = salubri
		}		
		else_if = {
			limit = {
				faith = faith:codeofsamiel
			}
			add_trait = salubri
		}
		else_if = {
			limit = {
				faith = faith:viaarchangeli
			}
			add_trait = toreador
		}		
		else_if = {
			limit = {
				faith = faith:viaentelechia 
			}
			add_trait = brujah
		}	
		else_if = {
			limit = {
				OR = {
					faith = faith:roadoftheabyss 
					faith = faith:vianoctis
				}
			}
			add_trait = lasombra
		}	
		else_if = {
			limit = {
				faith = faith:viacalantica
			}
			random_list = {
				30 = { add_trait = nosferatu }
				70 = { add_trait = toreador }
			}
		}		
		else = {
			POD_character_vampire_clan_initialization_effect = yes
		}
		
		add_character_flag = {
			flag = immune_to_disease
		}		
		POD_character_initialization_random_background_effect = yes
		
		random_list = {
			60 = { add_trait = vampgeneration12 }
			20 = { add_trait = vampgeneration11 }
			20 = { add_trait = vampgeneration10 } 
		}
		POD_character_vampire_clan_traits_effect = yes		
		POD_character_vampire_bloodhunger_initialization_effect = yes
		POD_character_vampire_predatortype_initialization_effect = yes
		POD_character_vampire_bloodpotency_initialization_effect = yes 
		POD_character_vampire_discipline_initialization_effect = yes
		       
	# }

	
	add_character_flag = {
		flag = had_POD_character_initialization
	}	
}

POD_character_initialization_for_vampire_commoners_adult_only_effect = {
	if = {
		limit = { 
			is_adult = yes 
		}
		POD_character_initialization_for_vampire_commoners_effect = yes
	}
	else = {
		trigger_event = POD_ghoul_maintenance.300
	}
}

POD_character_initialization_for_vampire_commoners_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# add_secret = {
			# type = secret_vampire
		# }
		# add_character_flag = {
			# flag = immune_to_disease
		# }		
		# POD_character_vampire_clan_initialization_effect = yes
		# POD_character_vampire_discipline_initialization_effect = yes
		# POD_character_initialization_random_background_effect = yes
	# }
	
	# if = {
		# limit = {
			# has_game_rule = world_of_monsters
		# }	
		add_trait = vampire
		add_character_flag = {
			flag = immune_to_disease
		}		
		# Assign Clan Based on Location
		POD_character_vampire_clan_initialization_effect = yes
		POD_character_vampire_clan_traits_effect = yes
		# Assign Faith based on Clan and Location
		POD_character_vampire_faith_initialization_effect = yes
	
		POD_character_initialization_random_background_effect = yes
		random_list = {
			60 = { add_trait = vampgeneration12 }
			20 = { add_trait = vampgeneration11 }
			20 = { add_trait = vampgeneration10 } 
		}		
		POD_character_vampire_bloodpotency_initialization_effect = yes 
		POD_character_vampire_discipline_initialization_effect = yes
		POD_character_vampire_bloodhunger_initialization_effect = yes
		POD_character_vampire_predatortype_initialization_effect = yes
	# }
	
	save_scope_as = characterneedsnewdynasty					
	POD_character_new_dynasty_effect = yes
	
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_kueijin_nobles_effect = {
	add_trait = kueijin
	if = {
		limit = { 
			highest_held_title_tier >= tier_kingdom
			current_year > 1100
		}
		change_age = { 500 1000 } #Random king or emperor?!
	}
	else_if = {
		limit = { highest_held_title_tier >= tier_duchy }
		change_age = { 250 500 } #Random duke?
	}
	else_if = {
		limit = { highest_held_title_tier = tier_county }
		change_age = { 100 250 } #Mandarin
	}
	else = {
		change_age = { 25 100 } #Jina
	}
	POD_character_vampire_infernalist_initialization_effect = yes
	POD_kueijin_initialization_effect = yes
	POD_character_initialization_random_background_effect = yes
	if = {
		limit = { exists = liege }
		POD_kj_ai_adoption_effect = { PARENT = liege }
	}
	add_character_flag = { flag = had_POD_character_initialization }
}

POD_character_initialization_for_kueijin_commoners_effect = {
	if = {
		limit = { is_adult = no }
		POD_character_initialization_for_mortal_commoners_effect = yes
	}
	else = {
		add_trait = kueijin
		POD_character_vampire_infernalist_initialization_effect = yes
		POD_kueijin_initialization_effect = yes
		POD_character_initialization_random_background_effect = yes
		add_character_flag = { flag = had_POD_character_initialization }
		if = {
			limit = { exists = liege }
			POD_kj_ai_adoption_effect = { PARENT = liege }
		}
		else_if = {
			limit = { exists = host }
			POD_kj_ai_adoption_effect = { PARENT = host }
		}
	}
}

POD_character_initialization_for_supehunter_barons_effect = {
	POD_character_initialization_for_supehunter_commoners_effect = yes
	if = {
		limit = {
			NOT = { has_trait = shih }
		}
		POD_give_orison_effect = yes
	}
}

POD_character_initialization_for_supehunter_commoners_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

	if = {
		limit = {
			# has_game_rule = world_of_monsters
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		if = {
			limit = {
				has_trait = gangrel
			}
			remove_trait = gangrel
		}		
		
		add_trait = supehunter
		save_scope_as = characterneedsnewdynasty
		
		if = {
			limit = {
				can_be_shih_trigger = yes
			}
			POD_shih_initialization_effect = yes
		}
		
		if = {
			limit = {
				NOT = { religion = { is_in_family = rf_hunters } }
			}
			POD_character_hunter_faith_initialization_effect = yes
		}
		
		random = {
			chance = 50
			POD_character_new_dynasty_effect = yes	
		}
		
		random = {
			chance = 1
			add_trait = psychic
			POD_resonance_increase_intensity_effect = yes
		}
		
		if = {
			limit = { faith = faith:shadowinquisition }
			random = {
				chance = 1
				add_trait = truefaith
			}
		}
		
		else_if = {
			limit = {
				NOT = { faith = faith:shadowinquisition }
			}
			random = {
				chance = 2
				add_trait = theurgist
			}
		}
		add_character_flag = {
			flag = had_POD_character_initialization
		}	
	}

	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# add_character_flag = {
			# flag = POD_mortal_race_flag
		# }	
		# add_secret = {
			# type = secret_supehunter
		# }
		# save_scope_as = characterneedsnewdynasty					
		# POD_character_new_dynasty_effect = yes		
		# add_character_flag = {
			# flag = had_POD_character_initialization
		# }		
	# }
}

POD_character_initialization_for_forsaken_barons_effect = {
	POD_character_initialization_for_forsaken_commoners_effect = yes
	add_trait = peasant_leader
}

POD_character_initialization_for_forsaken_commoners_effect = {
	POD_set_resonance_effect = yes
	if = {
		limit = {
			has_trait = mortal
		}
		remove_trait = mortal
	}
	add_trait = ghoul
	random_list = {
		70 = { add_trait = potence }
		70 = { add_trait = fortitude }
		70 = { add_trait = presence }
	}
	set_character_faith = faith:calomenasforsaken		
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_random_nobles_effect = {
	random_list = {
		100 = { 
			trigger = { culture_has_east_asian_heritage_pillar_trigger = yes }
			POD_character_initialization_for_kueijin_nobles_effect = yes
		}
		100 = { POD_character_initialization_for_vampire_nobles_effect = yes }
		10 = { POD_character_initialization_for_supehunter_barons_effect = yes }
		10 = { POD_character_initialization_for_shapeshifter_barons_effect = yes }
		10 = { POD_character_initialization_for_fae_nobles_effect = yes }
		1 = { 
			trigger = { has_demonic_liege_trigger = no }
			POD_character_initialization_for_wraith_nobles_effect = yes 
		}
	}
}

POD_character_initialization_for_random_barons_effect = {
	random_list = {
		500 = { 
			trigger = { can_hold_title_as_mortal_trigger = yes }
			POD_character_initialization_for_mortal_commoners_effect = yes 
		}
		100 = { 
			trigger = { culture_has_east_asian_heritage_pillar_trigger = yes }
			POD_character_initialization_for_kueijin_nobles_effect = yes
		}
		100 = { POD_character_initialization_for_vampire_barons_adult_only_effect = yes }
		100 = { POD_character_initialization_for_shapeshifter_barons_effect = yes }
		100 = { POD_character_initialization_for_supehunter_barons_effect = yes }
		100 = { POD_character_initialization_for_fae_barons_effect = yes }
		1 = { 
			trigger = { has_demonic_liege_trigger = no }
			POD_character_initialization_for_wraith_nobles_effect = yes 
		}
	}
}

POD_character_initialization_for_random_commoners_effect = {
	random_list = {
		700 = { POD_character_initialization_for_mortal_commoners_effect = yes }
		100 = { 
			trigger = { culture_has_east_asian_heritage_pillar_trigger = yes }
			POD_character_initialization_for_kueijin_commoners_effect = yes
		}
		100 = { POD_character_initialization_for_vampire_commoners_adult_only_effect = yes }
		100 = { POD_character_initialization_for_shapeshifter_commoners_effect = yes }
		100 = { POD_character_initialization_for_supehunter_commoners_effect = yes }
		100 = { POD_character_initialization_for_fae_commoners_effect = yes }
		1 = { POD_character_initialization_for_wraith_commoners_effect = yes }
	}
}

POD_character_initialization_for_neteru_barons_effect = {
	if = {
		limit = { 
			liege = { has_trait = mummy }
		}
		liege = { save_scope_as = amenti }
	}
	else = {
		liege = {
			random_relation = {
				type = worshipped_reborn
				save_scope_as = amenti
			}
		}
	}
	if = {
		limit = { 
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		POD_character_initialization_for_random_barons_effect = yes
	}
	set_relation_worshipped_reborn = scope:amenti
	add_trait = peasant_leader
	if = {
		limit = { scope:amenti = { has_trait = banemummy } }
		if = {
			limit = { has_trait = supehunter }
			scope:amenti = { save_scope_as = vampiresire }
			POD_hunter_enthrall_effect = yes
		}
	}
	else = {
		if = {
			limit = { has_trait = setite }
			remove_trait = setite
			add_trait = caitiff
		}
	}
	if = {
		limit = { 
			faith = { 
				OR = { 
					has_doctrine = doctrine_undying_crime
					has_doctrine = doctrine_undying_shunned
				} 
			} 
		}
		neteru_faith_initiation_effect = { LIEGE = scope:amenti }
	}
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_neteru_commoners_effect = {
	if = {
		limit = { 
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		POD_character_initialization_for_random_commoners_effect = yes
	}
	if = {
		limit = { exists = liege }
		liege = { save_scope_as = vampiresire }
	}
	else_if = {
		limit = { exists = host }
		host = { save_scope_as = vampiresire }
	}
	if = {
		limit = { exists = scope:vampiresire }
		if = {
			limit = { scope:vampiresire = { has_trait = banemummy } }
			if = {
				limit = { has_trait = supehunter }
				POD_hunter_enthrall_effect = yes
			}
		}
		else = {
			limit = { has_trait = setite }
			remove_trait = setite
			add_trait = caitiff
		}
	}
	if = {
		limit = { 
			faith = { 
				OR = { 
					has_doctrine = doctrine_undying_crime
					has_doctrine = doctrine_undying_shunned
				} 
			} 
		}
		neteru_faith_initiation_effect = { LIEGE = scope:vampiresire }
	}
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_thrall_barons_effect = {
	if = {
		limit = { 
			liege = { has_trait = demon }
		}
		liege = { save_scope_as = demon }
	}
	else = {
		liege = {
			random_relation = {
				type = demonic_master
				save_scope_as = demon
			}
		}
	}
	if = {
		limit = { is_a_thrall = no }
		set_relation_demonic_master = scope:demon
	}
	if = {
		limit = { NOT = { has_character_flag = had_POD_character_initialization } }
		POD_character_initialization_for_random_barons_effect = yes
	}
	add_trait = infernalist
	if = {
		limit = {
			has_trait = supehunter 
		}
		scope:demon = { save_scope_as = vampiresire }
		POD_hunter_enthrall_effect = yes
	}
	if = {
		limit = { has_trait = theurgist }
		remove_trait = theurgist
	}
	add_trait = peasant_leader
	set_character_faith = scope:demon.faith
	change_government = infernal_court_government
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_thrall_commoners_effect = {
	if = {
		limit = { 
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		POD_character_initialization_for_random_commoners_effect = yes
	}
	add_trait = infernalist
	if = {
		limit = {
			has_trait = supehunter 
		}
		if = {
			limit = { exists = liege }
			liege = { save_scope_as = vampiresire }
		}
		if = {
			limit = { exists = host }
			host = { save_scope_as = vampiresire }
		}
		POD_hunter_enthrall_effect = yes
	}
	if = {
		limit = { has_trait = theurgist }
		remove_trait = theurgist
	}
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_wraith_nobles_effect = {
	POD_character_initialization_for_wraith_commoners_effect = yes
	add_trait = peasant_leader
	POD_character_wraith_government_initiation_effect = yes
}

POD_character_initialization_for_wraith_commoners_effect = {
	POD_set_resonance_effect = yes

	if = {
		limit = {
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		add_trait = wraith
		if = {
			limit = {
				exists = liege
				liege = { has_trait = wraith }
			}
			if = {
				limit = {
					liege = {
						OR = {
							has_trait = lament 
							has_trait = risen
						}
					}
				}
				add_trait = lament
			}
			if = {
				limit = {
					liege = { has_trait = spectre }
				}
				add_trait = spectre
			}
		}
		else = {
			random = {
				chance = 1
				add_trait = lament
			}
		}

		POD_wraith_initialization_effect = yes
		POD_arcanoi_initiation_effect = yes
	}
	
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_mage_commoners_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes
	
	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# add_secret = {
			# type = secret_mage
		# }
		# add_character_flag = {
			# flag = had_POD_character_initialization
		# }
	# }

	if = {
		limit = {
			# has_game_rule = world_of_monsters
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		add_trait = mage
		
		# Assign Tradition (Faith) based on location
		
		# Assign Spheres based on Tradition
		
		#set_character_faith = faith:viahumanitatis

		add_character_flag = {
			flag = had_POD_character_initialization
		}
	}
}

POD_character_initialization_for_mortal_commoners_effect = {

	#POD_clear_resonance_effect = yes
	POD_set_resonance_effect = yes

	if = {
		limit = {
			# has_game_rule = world_of_monsters
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		add_trait = mortal
		
		if = {
			limit = {
				has_trait = gangrel
			}
			remove_trait = gangrel
		}
		
		if = {
			limit = {
				has_game_rule = world_of_monsters
				NOR = { 
					religion = { is_in_family = rf_hunters }
					religion = { is_in_family = rf_ignorance }
					religion = { is_in_family = rf_demons }
					religion = { is_in_family = rf_mummies }
				}
			}
			set_character_faith = faith:innocence
		}
		
		random = {
			chance = 1
			add_trait = psychic
			POD_resonance_increase_intensity_effect = yes
		}
		random = {
			chance = 1
			add_trait = sorcerer
		}
		random = {
			chance = 1
			add_trait = theurgist
		}
		random = {
			chance = 1
			add_trait = lament
		}		

		add_character_flag = {
			flag = had_POD_character_initialization
		}	
	}

	# if = {
		# limit = {
			# NOT = { has_game_rule = world_of_monsters }
			# NOT = { has_character_flag = had_POD_character_initialization }
		# }
		# add_character_flag = {
			# flag = POD_mortal_race_flag
		# }	

		# add_character_flag = {
			# flag = had_POD_character_initialization
		# }		
	# }
}

POD_character_initialization_random_background_effect = {
	# this should result for 30,000 characters to have 3,000 with a background: 300 diablerists, 300 infernalists, 300 unbondable, etc...
	
	random = {
		chance = 10
		
		random_list = {
			5 = {
				if = {
					limit = {
						is_diablerist_trigger = no
					}
					add_secret = {
						type = secret_diablerist
					}						
				}
			}
			5 = {
				if = {
					limit = {
						is_infernalist_trigger = no
					}
					add_secret = {
						type = secret_infernalist
					}						
				}
			}
			10 = {
				if = {
					limit = {
						is_unbondable_trigger = no
					}
					add_secret = {
						type = secret_unbondable
					}						
				}
			}			
			10 = {
				if = {
					limit = {
						is_oathbreaker_trigger = no
						is_kueijin_trigger = no 
					}
					add_trait = oathbreaker						
				}
			}	
			10 = {
				if = {
					limit = {
						is_kueijin_trigger = no 
						is_ventrue_trigger = no
						has_prey_exclusion_trigger = no 
						is_predatortype_farmer_trigger = no
					}
					POD_character_ventrue_prey_exclusion_initialization_effect	= yes
				}
			}
			10 = {
				if = {
					limit = {
						is_malkavian_trigger = no
					}
					POD_character_vampire_madness_initialization_effect = yes
				}
			}
			
			5 = {
				if = {
					limit = {
						OR = {
							is_toreador_trigger = yes
							is_malkavian_trigger = yes
							has_faith = faith:viaeinherjar
							has_faith = faith:viaarchangeli
						}
						NOT = { has_trait = poet }
					}
					add_trait = poet	
				}
			}
			20 = {
				# Wealth
				random_list = {
					50 = { add_gold = medium_gold_value }
					40 = { add_gold = major_gold_value }
					10 = { add_gold = massive_gold_value }
				}
			}			
			20 = {
				# piety
				random_list = {
					40 = { add_piety = medium_piety_loss }
					40 = { add_piety = medium_piety_loss }
					10 = { add_piety = major_piety_gain }
					10 = { add_piety = major_piety_loss }
				}
			}			
		}
	}
}

POD_werewolf_initialization_effect = {
	if = {
		limit = {
			NOR = {
				religion = { is_in_family = rf_wyrm }
				religion = { is_in_family = rf_gaia }
			}
		}
		POD_character_werewolf_faith_initialization_effect = yes
	}
	
	if = {
		limit = {
			POD_is_werewolf_trigger = yes
		}	
		POD_character_initialization_for_werewolf_assign_auspice_effect = yes			
		POD_character_initialization_for_werewolf_assign_breed_effect = yes	
		POD_assign_initial_rage_effect = yes
	}

	if = {
		limit = {
			OR = {
				religion = { is_in_family = rf_wyrm }
				religion = { is_in_family = rf_gaia }
			}
		}
		POD_assign_initial_gnosis_effect = yes
	}
	
	if = {
		limit = {
			NOT = { has_character_flag = immune_to_disease }
		}
		add_character_flag = immune_to_disease
	}
}

POD_ajaba_initialization_effect = {
	if = {
		limit = {
			NOR = {
				religion = { is_in_family = rf_wyrm }
				religion = { is_in_family = rf_gaia }
			}
		}
		POD_character_ajaba_faith_initiation_effect = yes
	}
	
	POD_character_initialization_for_ajaba_assign_breed_effect = yes	
	POD_assign_initial_rage_effect = yes
	POD_assign_initial_gnosis_effect = yes
	
	if = {
		limit = {
			NOT = { has_character_flag = immune_to_disease }
		}
		add_character_flag = immune_to_disease
	}
}

POD_bastet_initialization_effect = {
	if = {
		limit = {
			NOR = {
				religion = { is_in_family = rf_wyrm }
				religion = { is_in_family = rf_gaia }
			}
		}
		POD_character_bastet_faith_initiation_effect = yes
	}
	
	POD_character_initialization_for_bastet_assign_pryio_effect = yes
	POD_character_initialization_for_bastet_assign_breed_effect = yes	
	POD_assign_initial_rage_effect = yes
	POD_assign_initial_gnosis_effect = yes
	
	if = {
		limit = {
			NOT = { has_character_flag = immune_to_disease }
		}
		add_character_flag = immune_to_disease
	}
}

POD_kinfolk_initialization_effect = {
	if = {
		limit = {
			OR = {
				religion = { is_in_family = rf_wyrm }
				religion = { is_in_family = rf_gaia }
			}
		}
		random = {
			chance = 10
			add_trait = gnosis
			POD_assign_initial_gnosis_effect = yes
			POD_resonance_increase_intensity_effect = yes
		}
	}
	if = {
		limit = {
			NOR = {
				has_character_flag = werewolf_breed
				has_character_flag = ajaba_breed
				has_character_flag = bastet_breed
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = mother
						mother = { 
							OR = {
								has_character_flag = werewolf_breed
								has_trait = werewolf
							}
						}
					}
					AND = {
						exists = real_father
						real_father = { 
							OR = {
								has_character_flag = werewolf_breed
								has_trait = werewolf
							}
						}
					}
				}
			}
			add_character_flag = werewolf_breed
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = mother
						mother = { 
							OR = {
								has_character_flag = ajaba_breed
								has_trait = ajaba
							}
						}
					}
					AND = {
						exists = real_father
						real_father = { 
							OR = {
								has_character_flag = ajaba_breed
								has_trait = ajaba
							}
						}
					}
				}
			}
			add_character_flag = ajaba_breed
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = mother
						mother = { 
							OR = {
								has_character_flag = bastet_breed
								has_trait = bastet
							}
						}
					}
					AND = {
						exists = real_father
						real_father = { 
							OR = {
								has_character_flag = bastet_breed
								has_trait = bastet
							}
						}
					}
				}
			}
			add_character_flag = bastet_breed
		}
	}
	if = {
		limit = {
			NOR = {
				has_character_flag = werewolf_breed
				has_character_flag = ajaba_breed
				has_character_flag = bastet_breed
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = liege
						liege = { 
							OR = {
								has_character_flag = werewolf_breed
								has_trait = werewolf
							}
						}
					}
					AND = {
						exists = host
						host = { 
							OR = {
								has_character_flag = werewolf_breed
								has_trait = werewolf
							}
						}
					}
				}
			}
			add_character_flag = werewolf_breed
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = liege
						liege = { 
							OR = {
								has_character_flag = ajaba_breed
								has_trait = ajaba
							}
						}
					}
					AND = {
						exists = host
						host = { 
							OR = {
								has_character_flag = ajaba_breed
								has_trait = ajaba
							}
						}
					}
				}
			}
			add_character_flag = ajaba_breed
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = liege
						liege = { 
							OR = {
								has_character_flag = bastet_breed
								has_trait = bastet
							}
						}
					}
					AND = {
						exists = host
						host = { 
							OR = {
								has_character_flag = bastet_breed
								has_trait = bastet
							}
						}
					}
				}
			}
			add_character_flag = bastet_breed
		}
	}
	if = {
		limit = {
			NOR = {
				has_character_flag = werewolf_breed
				has_character_flag = ajaba_breed
				has_character_flag = bastet_breed
			}
		}
		add_character_flag = werewolf_breed
	}
}

POD_character_initialization_for_shapeshifter_barons_effect = {
	POD_set_resonance_effect = yes

	if = {
		limit = {
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		random_list = {
			90 = { 
				trigger = { 
					liege = { 
						OR = { 
							has_trait = werewolf 
							has_character_flag = werewolf_breed
						}
					}
				}
				add_trait = werewolf 
			}
			90 = { 
				trigger = { 
					liege = { 
						OR = { 
							has_trait = ajaba 
							has_character_flag = ajaba_breed
						}
					}
				}
				add_trait = ajaba 
			}
			90 = { 
				trigger = { 
					liege = { 
						OR = { 
							has_trait = bastet 
							has_character_flag = bastet_breed
						}
					}
				}
				add_trait = bastet 
			}
			10 = { add_trait = kinfolk }
		}
		
		if = {
			limit = { has_government = litany_government }
			capital_province = {
				if = {
					limit = { NOT = { has_holding_type = tribal_holding } }
					set_holding_type = tribal_holding
				}
			}
		}
			
		if = {
			limit = {
				has_trait = shapeshifter
			}	
			if = {
				limit = {
					POD_is_werewolf_trigger = yes
				}
				POD_werewolf_initialization_effect = yes
			}
			if = {
				limit = {
					POD_is_ajaba_trigger = yes
				}
				POD_ajaba_initialization_effect = yes
			}
			if = {
				limit = {
					POD_is_bastet_trigger = yes
				}
				POD_bastet_initialization_effect = yes
			}
		}
		
		
		if = {
			limit = {
				POD_is_kinfolk_trigger = yes
			}
			random = {
				chance = 1
				add_trait = psychic
				POD_resonance_increase_intensity_effect = yes
			}
			random = {
				chance = 1
				add_trait = sorcerer
			}
			POD_kinfolk_initialization_effect = yes
		}
		
		add_character_flag = {
			flag = had_POD_character_initialization
		}		
	}
	
}

POD_character_initialization_for_shapeshifter_commoners_effect = {

	POD_set_resonance_effect = yes

	if = {
		limit = {
			NOT = { has_character_flag = had_POD_character_initialization }
		}
		
		random_list = {
			90 = { 
				trigger = { 
					OR = { 
						AND = { 
							exists = liege
							liege = { 
								OR = { 
									has_trait = werewolf 
									has_character_flag = werewolf_breed
								}
							}
						}
						AND = { 
							exists = host
							host = { 
								OR = { 
									has_trait = werewolf 
									has_character_flag = werewolf_breed
								}
							}
						}
					}
				}
				add_trait = werewolf 
			}
			90 = { 
				trigger = { 
					OR = { 
						AND = { 
							exists = liege
							liege = { 
								OR = { 
									has_trait = ajaba 
									has_character_flag = ajaba_breed
								}
							}
						}
						AND = { 
							exists = host
							host = { 
								OR = { 
									has_trait = ajaba 
									has_character_flag = ajaba_breed
								}
							}
						}
					}
				}
				add_trait = ajaba 
			}
			90 = { 
				trigger = { 
					OR = { 
						AND = { 
							exists = liege
							liege = { 
								OR = { 
									has_trait = bastet 
									has_character_flag = bastet_breed
								}
							}
						}
						AND = { 
							exists = host
							host = { 
								OR = { 
									has_trait = bastet 
									has_character_flag = bastet_breed
								}
							}
						}
					}
				}
				add_trait = bastet 
			}
			10 = { add_trait = kinfolk }
		}
			
		if = {
			limit = {
				has_trait = shapeshifter
			}	
			if = {
				limit = {
					POD_is_werewolf_trigger = yes
				}
				POD_werewolf_initialization_effect = yes
			}
			if = {
				limit = {
					POD_is_ajaba_trigger = yes
				}
				POD_ajaba_initialization_effect = yes
			}
			if = {
				limit = {
					POD_is_bastet_trigger = yes
				}
				POD_bastet_initialization_effect = yes
			}
		}
		
		if = {
			limit = {
				POD_is_kinfolk_trigger = yes
			}
			random = {
				chance = 1
				add_trait = psychic
				POD_resonance_increase_intensity_effect = yes
			}
			random = {
				chance = 1
				add_trait = sorcerer
			}
			POD_kinfolk_initialization_effect = yes
			
		}
		add_character_flag = {
			flag = had_POD_character_initialization
		}		
	}	
}

POD_character_initialization_for_werewolf_assign_auspice_effect = {
	if = {
		limit = {
			POD_is_werewolf_trigger = yes
			POD_has_auspice_trigger = no
		}	
		
		# Assign Auspice at Random
		random_list = {
			20 = { add_trait = ragabash }
			20 = { add_trait = theurge  }
			20 = { add_trait = ahroun } 
			20 = { add_trait = philodox } 
			20 = { add_trait = galliard } 
		}
	}
}

POD_character_initialization_for_bastet_assign_pryio_effect = {
	if = {
		limit = {
			POD_is_bastet_trigger = yes
			POD_has_pryio_trigger = no
		}	
		
		# Assign Auspice at Random
		random_list = {
			20 = { add_trait = pryio_twilight }
			20 = { add_trait = pryio_daylight  }
			20 = { add_trait = pryio_night } 
		}
	}
}

POD_character_initialization_for_werewolf_assign_breed_effect = {
	if = {
		limit = {
			POD_is_werewolf_trigger = yes
			POD_has_breed_trigger = no
		}	
		
		# Assign Breed at Random 
		random_list = {
			10 = { 
				modifier = {
					religion = religion:redtalon_religion
					add = 75
				}
				add_trait = lupus_born
			}
			5 = { add_trait = metis  }
			10 = { 
				modifier = {
					NOT = { religion = religion:redtalon_religion }
					add = 75
				}
				add_trait = homid_born
			} 
		}
	}
}

POD_character_initialization_for_ajaba_assign_breed_effect = {
	if = {
		limit = {
			POD_is_ajaba_trigger = yes
			POD_has_breed_trigger = no
		}	
		
		# Assign Breed at Random 
		random_list = {
			10 = { 
				add_trait = hyaena_born
			}
			5 = { add_trait = metis  }
			10 = { 
				add_trait = homid_born
			} 
		}
	}
}

POD_character_initialization_for_bastet_assign_breed_effect = {
	if = {
		limit = {
			POD_is_bastet_trigger = yes
			POD_has_breed_trigger = no
		}	
		
		# Assign Breed at Random 
		random_list = {
			10 = { 
				add_trait = feline_born
			}
			5 = { add_trait = metis  }
			10 = { 
				add_trait = homid_born
			} 
		}
	}
}

POD_character_initialization_for_fae_nobles_effect = {
	if = {
		limit = {
			current_date < 1348.1.1
		}
		random_list = {
			80 = { 
				trigger = { has_demonic_liege_trigger = no }
				add_trait = fae
			}
			20 = { add_trait = changeling }
		}
	}
	else = {
		random_list = {
			20 = { 
				trigger = { has_demonic_liege_trigger = no }
				add_trait = fae
			}
			80 = { add_trait = changeling }
		}
	}
		
	if = {
		limit = {
			has_trait = fae
		}
		POD_fae_initialization_effect = yes
	}
	if = {
		limit = {
			has_trait = changeling
		}
		POD_changeling_initialization_effect = yes
	}
	
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_fae_barons_effect = {
	if = {
		limit = {
			current_date < 1348.1.1
		}
		random_list = {
			70 = { 
				trigger = { has_demonic_liege_trigger = no }
				add_trait = fae
			}
			30 = { add_trait = changeling }
		}
	}
	else = {
		random_list = {
			30 = {
				trigger = { has_demonic_liege_trigger = no }
				add_trait = fae
			}
			70 = { add_trait = changeling }
		}
	}
		
	if = {
		limit = {
			has_trait = fae
		}
		POD_fae_initialization_effect = yes
	}
	if = {
		limit = {
			has_trait = changeling
		}
		POD_changeling_initialization_effect = yes
	}
	
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}

POD_character_initialization_for_fae_commoners_effect = {
	random_list = {
		10 = { add_trait = fae }
		20 = { add_trait = changeling }
		70 = { add_trait = kinain }
	}
		
	if = {
		limit = {
			has_trait = fae
		}
		POD_fae_initialization_effect = yes
	}
	if = {
		limit = {
			has_trait = changeling
		}
		POD_changeling_initialization_effect = yes
	}
	if = {
		limit = {
			has_trait = kinain
		}
		random = {
			chance = 1
			add_trait = psychic
			POD_resonance_increase_intensity_effect = yes
		}
		random = {
			chance = 1
			add_trait = sorcerer
		}
		POD_kinain_initialization_effect = yes
	}
	
	add_character_flag = {
		flag = had_POD_character_initialization
	}
}
